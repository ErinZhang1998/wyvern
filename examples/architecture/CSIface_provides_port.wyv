module def CSIface_provides_port(port : CSIface, tcpServer : io.ServerSocket, java : Java) 

import thread.thread
import thread.Thread
import io.io
import io.Socket
import io.DataInputStream
import io.DataOutputStream
import json
val thread = thread(java)
val io = io(java)
val json = json(java)

def run() : Unit
	val socket : Socket = tcpServer.accept()
	val outData : DataOutputStream = io.makeDataOutputStream(socket.getOutputStream())
	val inData : DataInputStream = io.makeDataInputStream(socket.getInputStream())
	val key : json.JSON = json.stringToJSON(inData.readUTF())
	outData.writeUTF(port.getVal(json.deserializeFromJSON(key)))
	run()	

val runningThread : Thread = thread.make(() => run())

def getThread() : Thread
	runningThread
