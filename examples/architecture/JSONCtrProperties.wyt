require arraylist
import wyvern.collections.list
import wyvern.archast
import wyvern.ast
import wyvern.option

type JSONCtrProperties
	val host : String
	val prt : Int
	metadata new
		def test(str : String) : String
			str
		def checkPortCompatibility(l : list.List[archast.PortDecl]) : Boolean
			type PortDecl = archast.PortDecl
			var p1 : PortDecl = archast.Nil
			var p2 : PortDecl = archast.Nil
			if (l.length() == 2)	
					val op1 : option.Option[PortDecl] = l.get(0)
					val op2 : option.Option[PortDecl] = l.get(1)
					if (op1.isDefined && op2.isDefined)
							p1 = op1.getOrElse(() => p1)
							p1 = op2.getOrElse(() => p1)
						else 
							false
					var requires : String = ""
					var provides : String = ""
					if (p1.portdecl.getRequires() == "")
							if (p1.portdecl.getProvides() == "")
									false
								else
									provides = p1.portdecl.getProvides()
						else
							requires = p1.portdecl.getRequires()
					if (requires == "")	
							requires = p2.portdecl.getRequires()
						else	
							provides = p2.portdecl.getProvides()
								
					if (requires == provides)
							true
						else
							false
					true
				else
					false

		def generateConnectorImpl(l : list.List[archast.PortDecl]) : Unit //list.List[ast.AST]
			if (this.checkPortCompatibility(l))
					unit
				else
					unit

		def generateConnectorInit() : Unit
			unit

