require java
import fileSystem
import stdout
import wyvern.option
type Option = option.Option
val filesys = fileSystem(java)
val out = stdout(java)

val f = filesys.makeFile("example.txt")	     //should this create the file in itself? or only make existing?

val w = f.makeWriter()                       //automatically creates file
w.write("Hello World!")


w.close()

val ap = f.makeAppender()

ap.write("\nfoo")

ap.close()

val r = f.makeReader()

//out.print(r.readFully())
out.print(r.readLine().getOrElse(() => ""))
out.println()
out.print(r.readLine().getOrElse(() => ""))
out.println()

r.close()

val fe = filesys.makeFile("empty.txt")
out.print("/** READ FULLY TEST **/")
out.println()
val re = fe.makeReader()
out.print("made reader")
out.println()
out.print(re.readFully())
out.println()
re.close()


/* Random Access File */

/* options: "r" read only, "rw" read/write, "rws" content & metadata written synchronously,
 * "rwd" content written synchronously
 */
val raf = f.makeRandomAccessFile("rw")

out.printInt(raf.getPosition())
out.println()

//raf.seek(5)
raf.seek(1)
raf.writeUTF("what")
//out.print(raf.readLine())
raf.writeUTF("help")

/*
 * RandomAccessFile doesn't appear to actually write anything to the file
 * Also really weird spacing on normal write, writeUTF writes a weird character too
 */

raf.close()
val r = f.makeReader()
//out.print(r.readLine())
r.close()

out.println()