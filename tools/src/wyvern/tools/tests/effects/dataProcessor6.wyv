module def dataProcessor6(net : effects.NetworkType, stdout : Stdout)
effect genN = {}
def genNum() : { genN } Int
    3
def processData() : {genN} Unit // error: does not have net.receive effect
    stdout.print("dataProcessor6 w/ multiple layers of effect abstraction: \n")
    val n : Int = genNum() // {genN}
    net.receiveData() // {net.receive}
    stdout.print("data processed\n")
    stdout.print("dataProcessor6 done!\n")