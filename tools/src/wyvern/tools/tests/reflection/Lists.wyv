module Lists

import java:wyvern.tools.tests.ReflectionTests.tools
type Any

// Need booleans or equality tests to be implemented in order to properly check
// for the empty list. Need type parameters to properly constrain the type of
// values in the list.

// type Boolean

// val true : Boolean = new
// val false : Boolean = new

type List
    // def isEmpty() : Boolean
    val length : Int
    def getVal() : Any
    def getNext() : List

def empty(emptyVal : Any) : List = new
    // def isEmpty() : Boolean = true
    val length : Int = 0
    def getVal() : Any = emptyVal
    def getNext() : List = this

def cons(x : Any, y : List) : List = new
    // def isEmpty() : Boolean = false
    val length : Int = tools.add(y.length, 1)
    def getVal() : Any = x
    def getNext() : List = y

